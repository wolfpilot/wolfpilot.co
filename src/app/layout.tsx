"use client"

import { useState, useEffect } from "react"

// Utils
import { AppProvider } from "@/utils/context/AppContext"
// import { useAppState, useAppDispatch } from "@/utils/context/AppContext"

// Config
import { config as appConfig } from "@/config/app.config"

// Styles
import GlobalStyle from "@/styles/global"

// Components
import StyledComponentsRegistry from "@/lib/registry"
import SplashScreenUI from "@/components/screens/SplashScreenUI"
import DebugGrid from "@/components/utils/DebugGrid"

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

const RootLayout = ({ children }: { children: React.ReactNode }) => {
  // const appState = useAppState()
  // const appDispatch = useAppDispatch()

  // console.log("LOADING UI")

  // useEffect(() => {
  //   if (appState.isInitialized) return

  //   appDispatch({
  //     type: "updateIsInitialized",
  //     payload: true,
  //   })
  // }, [appState.isInitialized, appDispatch])

  const [isLoading, setIsLoading] = useState(true)

  useEffect(() => {
    if (isLoading) {
      return
    }
  }, [isLoading])

  return (
    <html lang="en">
      <body>
        <StyledComponentsRegistry>
          <GlobalStyle />
          <AppProvider>
            <DebugGrid />

            {appConfig.showSplashScreen && isLoading ? (
              <SplashScreenUI onLoaded={() => setIsLoading(false)} />
            ) : (
              children
            )}
          </AppProvider>
        </StyledComponentsRegistry>
      </body>
    </html>
  )
}

export default RootLayout
